name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Cache node modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm ci

    - name: Type check
      run: npm run typecheck

    - name: Run tests with coverage
      run: npx vitest run --coverage
      env:
        CI: true

    - name: Upload test coverage
      uses: actions/upload-artifact@v3
      with:
        name: coverage
        path: coverage/
        retention-days: 14

    - name: Build
      run: npm run build
      env:
        CI: true
        NODE_ENV: production

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: dist/
        retention-days: 7

  security:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Run security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        CI: true

    - name: Save security scan results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-report
        path: snyk-report.json
        retention-days: 30

  deploy:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build
        path: dist

    - name: Validate environment
      run: |
        if [ -z "${{ secrets.REPLIT_TOKEN }}" ]; then
          echo "Error: REPLIT_TOKEN is not set"
          exit 1
        fi

    - name: Deploy to Replit
      env:
        REPLIT_TOKEN: ${{ secrets.REPLIT_TOKEN }}
      run: |
        echo "Deployment will be handled by Replit's deployment system"